/* package codechef; // don't place package name! */

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.PriorityQueue;
import java.util.Random;
import java.util.StringTokenizer;
import java.util.*;
import java.lang.Math;

public class Main{
    public static void main(String[] args){
        FastScanner fs=new FastScanner();
        PrintWriter out=new PrintWriter(System.out);
        int test=fs.nextInt();
        while(test-->0){
           int x=fs.nextInt();
           int y=fs.nextInt();

           if(y/3>=x){
            System.out.println("YES");
           }
           else{
            System.out.println("NO");
           }
        }     
   }
    static int Euclidean(int x,int y){
        int r=0,a,b;
        a=(x>y)?x:y;
        b=(x<y)?x:y;
        r=b;
        while(a%b!=0){
            r=a%b;
            a=b;
            b=r;
        }
        return r;
    }
    static int ans(int lft,int rgt,int[] pref,int[] suff,int n){
        if(rgt==n-1){
            return pref[lft-1];
        }
        if(lft==0){
            return suff[rgt+1];
        }
        return Euclidean(pref[lft-1],suff[rgt+1]);
    }
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        String next() {
            while (!st.hasMoreTokens())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
       
        int nextInt() {
            return Integer.parseInt(next());
        }
        int[] readArray(int n) {
            int[] a=new int[n];
            for (int i=0; i<n; i++) a[i]=nextInt();
            return a;
        }
        long nextLong() {
            return Long.parseLong(next());
        }
    }
}
